/*--------------------------------------------------- 
    mainNav:

    Styles for the main navigation.

    NOTE: This partial affects _childNav partial!
    See comments below.
---------------------------------------------------*/

.mainNav {
    background: $GREY_MEDIUM;
    text-align: right;
}

.mainNav-list {
    @include constrain-main-width();
    font-size: 0;
}

.mainNav-list > * {
    @include inline-block();
    position: relative;
    vertical-align: middle;
    font-size: initial;
    z-index: 200;
}

.mainNav-list-item_isActive > .mainNav-list-item-label {
    background: $GREY_LIGHTEST;
    color: $GREY_DARK_LIGHT;
}

.mainNav-list-item:hover {
    background: $OFFWHITE_ORANGE_TINT_LIGHT;
}

.mainNav-list-item:hover > .mainNav-list-item-label,
.mainNav-list-item_isActive:hover > .mainNav-list-item-label {
    color: $GREY_DARK_LIGHT;
    background: $OFFWHITE_ORANGE_TINT_LIGHT;
}

.mainNav-list-item-label {
    display: block;
    padding: 16px 28px 16px 58px;
    position: relative;
    font-size: $FONT_SIZE_MEDIUM_LARGE;
    color: $WHITE;
}

.mainNav-list-item-label > .icn {
    position: absolute;
    left: 25px;
    top: 13px;
    font-size: $FONT_SIZE_LARGE;
}

/* STYLES THAT AFFECT "CHILD NAV" SASS OBJECT, BUT DEPEND ON THIS OBJECT */
.mainNav-list-item > .childNav { // It's visibly hidden by default.
    /* Cherry-picked, cucustom "visibly-hidden" CSS properties. */
    margin: -1px;
    height: 1px;
    width: 1px;
    position: absolute;
    overflow: hidden;
    clip: rect(0 0 0 0);
}

.mainNav-list-item:hover > .childNav { // Child nav is visible when .mainNav-list-item is hovered on.
    /* Cherry-picked, cucustom "visibly-seen" CSS properties. */
    margin: 0;
    padding: 0;
    height: auto;
    width: 120%;
    position: absolute;
    overflow: visible;
    clip: (auto);
}

.mainNav-list-item:hover:last-child > .childNav,
.mainNav-list-item_lastChild:hover > .childNav { 
    right: 0; // Allows last child not to overflow outside of container content area.
}